Query: How do I create temporary file?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/38878033)
 Although you should not create files within the EJB environment, much less have a folder associated with your application through the File class of Java SE can create a temporary file which will be stored on the temporary files folder of the user It has associated the application server process. For example, the following code fragment create a temporary file that will be placed in the temporary files folder  

  File tempV1 = File.createTempFile("tempfile", ".tmp");
//C:\Users\JAVIER~1.ZAM\AppData\Local\Temp\file4872171473798955694.tmp
  

 If you assign a special folder for temporary files, you can pass it as a parameter as follows: 

  File tempV2 = File.createTempFile("tempfile", ".tmp",  
                                   new File("c:/server/temporal"));
//C:\server\temporal\file631043069173548312.tmp
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/817423)
 I've never seen a good solution for this, but this is how I've done it. 

  File temp = File.createTempFile("folder-name","");
temp.delete();
temp.mkdir();
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/3862109)
  Please close the streams  

  File fstream = File.createTempFile("tmpDirectory",".flv"); 
FileOutputStream fos = new FileOutputStream(fstream); 
DataOutputStream dos=new DataOutputStream(fos); 

dos.writeChars("Write something"); 

fstream.deleteOnExit(); 
  

  

  fos.close();
dos.close();
  

  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/16691530)
 from: http://www.mkyong.com/java/how-to-delete-temporary-file-in-java/ 

 
   Temporary file is used to store the less important and temporary data,
   which should always be deleted when your system is terminated . The
  best practice is use the File.deleteOnExit() to do it. 
 

 For example, 

  File temp = File.createTempFile("abc", ".tmp"); 
temp.deleteOnExit();
  

 The above example will create a temporary file named “abc.tmp” and  delete it when the program is terminated or exited . 

 If you want  to delete the temporary file manually , you can still use the File.delete(). 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/2903813)
 Use something like this. It won't be in-memory though, but a temporary file that is deleted when the app exits. 

  try { 
   // Create temp file. 
   File temp = File.createTempFile("pattern", ".suffix"); 

   // Delete temp file when program exits.
   temp.deleteOnExit();

   // Write to temp file
   BufferedWriter out = new BufferedWriter(new FileWriter(temp));    
   out.write("aString");     
   out.close();
} catch (IOException e) { 
// (..)
} 
  



