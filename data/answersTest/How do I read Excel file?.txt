Query: How do I read Excel file?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/23009952)
  String path="C:\\Book2.xlsx";
try {

        File f = new File( path );
        Workbook wb = WorkbookFactory.create(f);
        Sheet mySheet = wb.getSheetAt(0);
        Iterator<Row> rowIter = mySheet.rowIterator();
        for ( Iterator<Row> rowIterator = mySheet.rowIterator() ;rowIterator.hasNext(); )
        {
            for (  Iterator<Cell> cellIterator = ((Row)rowIterator.next()).cellIterator() ; cellIterator.hasNext() ;  ) 
            {
                System.out.println ( ( (Cell)cellIterator.next() ).toString() );
            }
            System.out.println( " **************************************************************** ");
        }
    } catch ( Exception e )
    {
        System.out.println( "exception" );
        e.printStackTrace();
    }
  

 and make sure to have added the jars  poi  and poi-ooxml (org.apache.poi) to your project 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/16199142)
  import java.io.File;
import java.io.IOException;

import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

public class NewExcel 
{

    private String inputFile;
    String[][] data = null;
    public void setInputFile(String inputFile) 
    {
        this.inputFile = inputFile;
    }

    public String[][] read() throws IOException  
    {
        File inputWorkbook = new File(inputFile);
        Workbook w;

        try 
        {
            w = Workbook.getWorkbook(inputWorkbook);
            // Get the first sheet


            Sheet sheet = w.getSheet(0);
            data = new String[sheet.getColumns()][sheet.getRows()];
            // Loop over first 10 column and lines
       //     System.out.println(sheet.getColumns() +  " " +sheet.getRows());
            for (int j = 0; j <sheet.getColumns(); j++) 
            {
                for (int i = 0; i < sheet.getRows(); i++) 
                {
                    Cell cell = sheet.getCell(j, i);
                    data[j][i] = cell.getContents();
                  //  System.out.println(cell.getContents());
                }
            }

         /*   for (int j = 0; j < data.length; j++) 
            {
                for (int i = 0; i <data[j].length; i++) 
                {

                    System.out.println(data[j][i]);
                }
            } */

        } 
        catch (BiffException e) 
        {
            e.printStackTrace();
        }
    return data;
    }


}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/42388131)
 using spring apache poi repo 

  if (fileName.endsWith(".xls")) {



File myFile = new File("file location" + fileName);
                FileInputStream fis = new FileInputStream(myFile);

                org.apache.poi.ss.usermodel.Workbook workbook = null;
                try {
                    workbook = WorkbookFactory.create(fis);
                } catch (InvalidFormatException e) {

                    e.printStackTrace();
                }


                org.apache.poi.ss.usermodel.Sheet sheet = workbook.getSheetAt(0);


                Iterator<Row> rowIterator = sheet.iterator();


                while (rowIterator.hasNext()) {
                    Row row = rowIterator.next();

                    Iterator<Cell> cellIterator = row.cellIterator();
                    while (cellIterator.hasNext()) {

                        Cell cell = cellIterator.next();
                        switch (cell.getCellType()) {
                        case Cell.CELL_TYPE_STRING:
                            System.out.print(cell.getStringCellValue());
                            break;
                        case Cell.CELL_TYPE_BOOLEAN:
                            System.out.print(cell.getBooleanCellValue());
                            break;
                        case Cell.CELL_TYPE_NUMERIC:
                            System.out.print(cell.getNumericCellValue());
                            break;
                        }
                        System.out.print(" - ");
                    }
                    System.out.println();
                }
            }
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/12855380)
 It seems you are using apache-poi. 

 I used the following code to read my xlsm file 

  FileInputStream fileIn=new FileInputStream("d:\\excelfiles\\WeeklyStatusReport.xlsm");

Workbook wb=WorkbookFactory.create(fileIn);      //this reads the file

final Sheet sheet=wb.getSheet("Sheet_name");  //this gets the existing sheet in xlsmfile
//use wb.createSheet("sheet_name"); to create a new sheet and write into it
  

 Then you can use Row and Cell classes to read the contents 

 Finally to write do this 

  FileOutputStream fileOut=new FileOutputStream("d:\\excelfiles\\WeeklyStatusReport.xlsm");
wb.write(fileOut);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/30889793)
 // Get the workbook instance for XLS file 

  XSSFWorkbook workbook = new XSSFWorkbook(file);
  

 // Get first sheet from the workbook 

  XSSFSheet sheet = workbook.getSheetAt(0);

ArrayList<String> columndata = null;

Iterator<Row> rowIterator = sheet.iterator();
columndata = new ArrayList<>();

while (rowIterator.hasNext()) {
    Row row = rowIterator.next();
    Iterator<Cell> cellIterator = row.cellIterator();
    while (cellIterator.hasNext()) {
        Cell cell = cellIterator.next();

        if (row.getRowNum() > 0) { // To filter column headings
            if (cell.getColumnIndex() == 0) {// To match column
                                                // index
                switch (cell.getCellType()) {
                case Cell.CELL_TYPE_NUMERIC:
                    columndata.add(cell.getNumericCellValue() + "");
                    break;
                case Cell.CELL_TYPE_STRING:
                    columndata.add(cell.getStringCellValue());
                    break;
                }
            }
        }
    }
}
  



