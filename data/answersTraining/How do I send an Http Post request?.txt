Query: How do I send an Http Post request?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/1359702)
 From http://java.sun.com/docs/books/tutorial/networking/urls/readingWriting.html 

  import java.net.*;
import java.io.*;

public class URLConnectionReader {
    public static void main(String[] args) throws Exception {
        URL yahoo = new URL("http://www.yahoo.com/");
        URLConnection yc = yahoo.openConnection();
        BufferedReader in = new BufferedReader(
                                new InputStreamReader(
                                yc.getInputStream()));
        String inputLine;

        while ((inputLine = in.readLine()) != null) 
            System.out.println(inputLine);
        in.close();
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/31302480)
 The problem is that the browser sends a  GET  request, where the parameter is in the URL itself as a query string, but you are sending a  POST  request without any body data. 

 Use  HttpGet  instead of  HttpPost  to send a  GET  request: 

  HttpClient httpclient = new DefaultHttpClient();
HttpGet httpget = new HttpGet("http://192.168.0.215/i_activate/aterm?40~00");

// Execute HTTP Get Request
HttpResponse response = httpclient.execute(httpget);
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/15064114)
 You should be using  UrlEncodedFormEntity  not setParameter on the post.
It handles the  Content-Type: application/x-www-form-urlencoded  header for you too. 

  HttpPost post = new HttpPost("https://accounts.google.com/o/oauth2/token");
List <NameValuePair> nvps = new ArrayList <NameValuePair>();
nvps.add(new BasicNameValuePair("code", code));
nvps.add(new BasicNameValuePair("client_id", client_id));
nvps.add(new BasicNameValuePair("client_secret", client_secret));
nvps.add(new BasicNameValuePair("redirect_uri", redirect_uri));
nvps.add(new BasicNameValuePair("grant_type", grant_type));

post.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8));

DefaultHttpClient httpClient = new DefaultHttpClient();
HttpResponse response = httpClient.execute(post);
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/28362838)
 HTTP POST request example using Apache HttpClient  v.4.x  

  HttpClient httpClient = HttpClients.createDefault();
HttpPost httpPost = new HttpPost(url);
MultipartEntityBuilder builder = MultipartEntityBuilder.create();
builder.addTextBody("param1", param1Value, ContentType.TEXT_PLAIN);
builder.addTextBody("param2", param2Value, ContentType.TEXT_PLAIN);
HttpEntity multipart = builder.build();
httpPost.setEntity(multipart);
HttpResponse response = httpClient.execute(httpMethod);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/39982715)
 It is very easy with httpclient, here is example 

  import java.io.IOException;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

public class HttpClientUtils {

    public JSONObject doPost() {
        HttpClient httpclient = HttpClientBuilder.create().build();
        HttpPost request = new HttpPost("https://fcm.googleapis.com/fcm/send");
        JSONObject result = new JSONObject();
        try {
            String bodyContent = "{  'data': {    'score': '5x1',     'time': '15:10'   },   'to' : 'bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1...'}";
            StringEntity requestBody = new StringEntity(bodyContent);
            request.setEntity(requestBody);
            request.setHeader("Content-Type", "application/json");
            request.setHeader("Authorization", "key=AIzaSyZ-1u...0GBYzPu7Udno5aA");
            HttpResponse response = httpclient.execute(request);
            HttpEntity entity = response.getEntity();
            String responseString = EntityUtils.toString(entity);
            result.put("status", response.getStatusLine().getStatusCode());
            result.put("bodyContent", new JSONObject(responseString));
        } catch (ClientProtocolException e) {
            result.put("status", "500");
            result.put("bodyContent", "");
            e.printStackTrace();
        } catch (IOException e) {
            result.put("status", "500");
            result.put("bodyContent", "");
            e.printStackTrace();
        } finally {
            request.releaseConnection();
        }
        return result;
    }


}
  



