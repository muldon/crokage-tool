Query: Take a screenshot and save as image in Java
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/4490471)
 Use http://download.oracle.com/javase/6/docs/api/java/awt/Robot.html#createScreenCapture%28java.awt.Rectangle%29. 

  BufferedImage image = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize()));
ImageIO.write(image, "png", new File("/screenshot.png"));
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/27603992)
  import java.awt.Color;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File; 
import javax.imageio.ImageIO;
import javax.swing.*;  

public class HelloWorldFrame extends JFrame implements ActionListener {

JButton b;
public HelloWorldFrame() {
    this.setVisible(true);
    this.setLayout(null);
    b = new JButton("Click Here");
    b.setBounds(380, 290, 120, 60);
    b.setBackground(Color.red);
    b.setVisible(true);
    b.addActionListener(this);
    add(b);
    setSize(1000, 700);
}
public void actionPerformed(ActionEvent e)
{
    if (e.getSource() == b) 
    {
        this.dispose();
        try {
            Thread.sleep(1000);
            Toolkit tk = Toolkit.getDefaultToolkit(); 
            Dimension d = tk.getScreenSize();
            Rectangle rec = new Rectangle(0, 0, d.width, d.height);  
            Robot ro = new Robot();
            BufferedImage img = ro.createScreenCapture(rec);
            File f = new File("myimage.jpg");//set appropriate path
            ImageIO.write(img, "jpg", f);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
}

public static void main(String[] args) {
    HelloWorldFrame obj = new HelloWorldFrame();
}
}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/13363177)
 See http://docs.oracle.com/javase/1.4.2/docs/api/javax/imageio/ImageIO.html 

 The type can be "jpg", "png" (Java <1.6) or "gif" (Java 1.6+). 

 To save a ToolKitImage you can do the following. 

  BufferedImage bufferedImage= new BufferedImage(toolkitImage.getWidth(), toolkitImage.getHeight(), BufferedImage.TYPE_INT_RGB);
image.getGraphics().drawImage(toolkitImage, 0, 0, null);
ImageIO.write(bufferedImage, "jpg", new File("C:\\myImage.jpg"));
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/58326)
 Believe it or not, you can actually use http://java.sun.com/javase/6/docs/api/java/awt/Robot.html#createScreenCapture&#40;java.awt.Rectangle&#41; to "create an image containing pixels read from the screen." You can then write that image to a file on disk. 

 I just tried it, and the whole thing ends up like: 

  Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
BufferedImage capture = new Robot().createScreenCapture(screenRect);
ImageIO.write(capture, "bmp", new File(args[0]));
  

 NOTE: This will only capture the primary monitor. See http://java.sun.com/javase/6/docs/api/java/awt/GraphicsConfiguration.html for multi-monitor support. 


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/6034053)
 If you want to use ImageIO this should work: 

  ImageIO.write(image, "png", new File("new output file name")); 
  



