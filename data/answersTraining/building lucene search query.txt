Query: building lucene search query
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/39869831)
 use this: 

  String queryString="Name:alivaliolah";
Query QueryObj=new QueryParser("", perFieldAnalyzor).parse(queryString);
TopDocs topDocFounded = searcher.search(QueryObj, hitsPerPage);
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/11791653)
 . Here is how you are suppose to use it. 

 
 Build your query in  BooleanQuery  with your fields and parameters. 
 Pass the  BooleanQuery  String to be parsed using the  QueryParser . 
 

 Here is the snippet for the same. 

  BooleanQuery b = new BooleanQuery();

Set<String> fields = params.keySet();
StandardAnalyzer analyzer = new StandardAnalyzer(version);

b.add(new TermQuery(new Term("cs-method", "GET"), BooleanClause.Occur.SHOULD);
b.add(new TermQuery(new Term("cs-uri", "/blank"), BooleanClause.Occur.SHOULD);

Query q = new QueryParser(version, "cs-method", analyzer).parse(b.toString());
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/25844952)
 As I explained in the comment of linked question, just feed this String back to  QueryParser  and you should get identical  Query  objects back. 

  import org.apache.lucene.queryparser.classic.QueryParser;

...

String queryString = "+age[20 TO 30] AND name:einstein";
Query query = new QueryParser(Version.LUCENE_4_7, null, <yourAnalyzer>)
                   .parse(queryString);
  



