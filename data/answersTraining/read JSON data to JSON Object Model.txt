Query: read JSON data to JSON Object Model
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/23192888)
 From http://javapostsforlearning.blogspot.com/2013/11/gson-example-read-and-write-json.html: 

   public static void main(String[] args) {

  Gson gson = new Gson();

  try {

   System.out.println("Reading JSON from a file");
   System.out.println("----------------------------");

   BufferedReader br = new BufferedReader(
     new FileReader(args[0]));

    //convert the json string back to object
   MyBean countryObj = gson.fromJson(br, MyBean.class);
    // MyBean contains the data in the JSON and is a standard Java Bean   
 }
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/20632427)
    try {

             String data = null;
             String url = "localhost:8080/test/rest/Action/xyz";
             String[] dataArray = null;
             DefaultHttpClient client = new DefaultHttpClient();
             HttpUriRequest getRequest = new HttpGet(getUrl);
             getRequest.addHeader("User-Agent", USER_AGENT);
             getRequest.addHeader(BasicScheme.authenticate(new UsernamePasswordCredentials("key",
                "pwd"), "UTF-8", false));
             getRequest.setHeader("Content-Type", "application/json");
             HttpResponse response = client.execute(getRequest);

             HttpResponse response = client.execute(request);

             BufferedReader rd = new BufferedReader(new  InputStreamReader(response.getEntity().getContent()));
             System.out.println("Response Code : " +  response.getStatusLine().getStatusCode());
             data = rd.readLine();

            }

        } catch () {
       }

try {

        HttpGet request = new HttpGet(url);
        HttpResponse response = client.execute(request);
        System.out.println("Response Code : " + response.getStatusLine().getStatusCode());

        data = EntityUtils.toString(response.getEntity());
        dataArray = data.split(",");
    } 
    catch (Exception ex) {
    }
    JSONObject mJSONObject = new JSONObject(data);

    try {
        JSONArray mjSONArray = mJSONObject.getJSONArray("values");
        for (int i = 0; i < mjSONArray.length(); i++) {
            JSONObject obj;
            obj = mjSONArray.getJSONObject(i);
            valu = obj.getString("valu");
            valu1= obj.getString("valu1");
            valu2= obj.getString("valu2");
            system.out.println(valu);               
            system.out.println(valu1);               
            system.out.println(valu2);
        }
  

 Using this you can get all the jsonarray data in variables. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/43045241)
 Add Jackson databind: 

  <dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.9.0.pr2</version>
</dependency>
  

 Create DTO class with related fields and read JSON file: 

  ObjectMapper objectMapper = new ObjectMapper();
ExampleClass example = objectMapper.readValue(new File("example.json"), ExampleClass.class);
  



