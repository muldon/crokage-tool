Query: How do I create a console progress bar?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/31771301)
 take a look at this 

  static int current=0;
static int previous=0;
static String previousString="";
public static void main(String[] args) throws InterruptedException {
    String format = "[%s]%d%%\r";

    for (int i = 0; i <= 100; i++) {
        try {
            current=i/10;
            System.out.print(String.format(format, repeat("#",current ), i));
        } catch (ArithmeticException e) {
            System.out.print(String.format(format, repeat("#", 0), i));
        }
        Thread.sleep(10);
    }
}

static String repeat(String StringToRepat, int repetition) {
    if (repetition==previous)
    {
        return previousString;
    }
    StringBuilder builder = new StringBuilder("");
    for (int i = 0; i < repetition; i++)
        builder.append(StringToRepat);
    previousString=builder.toString();
    previous=repetition;
    return previousString;


}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/13367595)
 The reason your progress bar disappears immediately is your  ActionListener  

  button.addActionListener(new ActionListener() {
  @Override
  public void actionPerformed(ActionEvent arg0) {
   MyCustomProgressBarDialog progressBarObj = new    MyCustomProgressBarDialog(progressBar);
   progressBarObj.createProgressUI();

   MyActionPerformer actionObj = new MyActionPerformer(progressBar);
   actionObj.execute();

   progressBarObj.setVisible(false);
  }
});
  

 The  actionObj.execute();  method is not blocking (good thing or it would be useless) meaning that immediately after you start the  SwingWorker  with that call you will execute the  progressBarObj.setVisible(false);  statement. 

 This causes the progress bar dialog to disappear. 

 I can think of 2 solutions for this 

 
 Pass the dialog to the  SwingWorker  as well and call  setVisible( false )  on the dialog in the  done  method of the  SwingWorker  
 A  SwingWorker  fires  PropertyChangeEvent s which allow you to determine how far it progressed. You can use such a listener to hide the dialog when the calculations are finished 
 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/15846788)
 This is a simple "progress bar" concept. 

 Basically it uses the  \b  character to backspace over characters previously printed to the console before printing out the new progress bar... 

  public class TextProgress {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        System.out.println("");
        printProgress(0);
        try {
            for (int index = 0; index < 101; index++) {
                printProgress(index);
                Thread.sleep(125);
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(TextProgress.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void printProgress(int index) {

        int dotCount = (int) (index / 10f);
        StringBuilder sb = new StringBuilder("[");
        for (int count = 0; count < dotCount; count++) {
            sb.append(".");
        }
        for (int count = dotCount; count < 10; count++) {
            sb.append(" ");
        }
        sb.append("]");
        for (int count = 0; count < sb.length(); count++) {
            System.out.print("\b");
        }
        System.out.print(sb.toString());

    }
}
  

 It won't work from within most IDE's, as Java's text components don't support the  \b  character, you must run from the terminal/console 



