Query: How do I detect non-ASCII characters in string?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2485878)
 I'm not sure if I understand your questions. If you can formulate it better, I think a simple regular expression replacement may be all that you need. 

  String r = s.replaceAll(REGEX, "X");
  

 REGEX depends on what you need: 

  "\\*|#|~"   : matches only '*', "#', and '~'
"[^\\d\\w]" : matches anything that is neither a digit nor a word character
"\\[.\\]"   : matches '[' followed by ANY character followed by ']'
"(?<=\\[).(?=\\])" : matches only the character surrounded by '[' and ']'
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/8519863)
 This will search and replace all non  ASCII  letters: 

  String resultString = subjectString.replaceAll("[^\\x00-\\x7F]", "");
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/21478020)
 Characters that require utf8mb4 are represented as a surrogate pair in Java, and occupy 2 chars. A simple way to detect them is therefore checking if the length of the string in chars is the same as the number of code points: 

  boolean requiresMb4(String s) {
    int len = s.length();
    return len != s.codePointCount(0, len);
}
  



