Query: How do I rotate elements of a collection?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/18330087)
 Consider the following Util method http://docs.oracle.com/javase/tutorial/collections/interfaces/collection.html 

 
   The following method shows you how to use an Iterator to filter an arbitrary Collection â€” that is, traverse the collection removing specific elements. 
 

  static void filter(Collection<?> c) {
    for (Iterator<?> it = c.iterator(); it.hasNext(); )
        if (!cond(it.next()))
            it.remove();
}
  

 This simple piece of  code is polymorphic , which means that it works for any  Collection  regardless of  implementation . 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/27813883)
 Two issues: 

 
 You are trying to get sublist from 3 to 1 which should be vice versa. So you could check min and max and then try to get sublist. 
  Your sublist call will bring you element say from index 1 to n-1 i.e. if you pass 3, you will get just two elements i.e. index 1 and 2 and not the third one. See this http://docs.oracle.com/javase/7/docs/api/java/util/List.html#subList(int,%20int) for details. You could do something like: 

  List<String> list = new ArrayList<String>(Arrays.asList("Periodic", "Multiple", "Single", "Subsequent", "Consecutive"));
int indexOfSubName = 0;
int indexOfMultipleName = 0;
for (int i = 0; i < list.size(); i++) {
    String name = list.get(i);
    if (name.equalsIgnoreCase("Subsequent")) {
        indexOfSubName = list.indexOf(name);
    }
    if (name.equalsIgnoreCase("Multiple")) {
        indexOfMultipleName = list.indexOf(name);
    }
}
int min = Math.min(indexOfMultipleName, indexOfSubName);
int max = Math.max(indexOfMultipleName, indexOfSubName);
Collections.rotate(list.subList(min, max+1), 1);
System.out.println(list);
   
 

 if you run this, you will get output as what you need: 

  [Periodic, Subsequent, Multiple, Single, Consecutive]
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/32247759)
 Let the  collection  be any collection ( Collection<T> collection ). 

  E list = factory.get();
List<T> colAsList = new ArrayList<>(collection);
for (int i = 0; i < size; i++) {
    int r = MathUtils.randomInt(0, colAsList.size() - 1);
    list.add(colAsList.remove(r));
}
collection.removeAll(list);
return list;
  



