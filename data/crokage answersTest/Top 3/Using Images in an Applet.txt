Query: Using Images in an Applet
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/30610852)
 Applets load images asynchronously, so it is likely the images are not fully loaded before the applet goes to paint.  But every Java component worth mentioning implements an  ImageObserver  that means it will get updates on image loading.  So to fix the problem, change this: 

  g.drawImage(pi, x, y, w, h, null);
  

 To  this:  

  g.drawImage(pi, x, y, w, h, this);
  

 Update 

 I mistakenly thought the  drawImage  method was part of the  JApplet  (which is an  ImageObserver ).  You might simply change the method declaration & painting line to: 

  public void draw(Graphics g, ImageObserver io) {
    g.drawImage(pi, x, y, w, h, io);
}
  

 Then to call it, change:  

  sd.draw(g);
  

   

  sd.draw(g, this);
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/24969273)
 It's likely the image can't be accessed from its current context, remember, applets normally run in a very tight security sandbox which prevents them from accessing  files on the local/client file system. 

 You either need to load the images from the server the applet is been loaded from (using  getDocument/CodeBase  or a relative URL), or based on your example, as embedded an resource, for example 

  tileset_terrain = ImageIO.read(getClass().getResource("/res/tileset_terrain.png"));
  

 This assumes that the image is included within the Jar file under the  /res  directory. 

 If the image resides on the server from which the applet is been load, you could also use 

  try {
    URL url = new URL(getCodeBase(), "res/tileset_terrain.png");
    img = ImageIO.read(url);
} catch (IOException e) {
    e.printStackTrace();
}
  

 Take a look at http://docs.oracle.com/javase/tutorial/2d/images/loadimage.html and http://docs.oracle.com/javase/tutorial/deployment/applet/security.html for more details. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/7440440)
 1) we living .. in 21century, then please JApplet instead of Applet  

  import java.awt.*;
import javax.swing.JApplet;

public class LastAirBender extends JApplet {

    private static final long serialVersionUID = 1L;
    private Image aang;

    @Override
    public void init() {
        aang = getImage(getDocumentBase(), getParameter("images.jpg"));
    }

    @Override
    public void paint(Graphics g) {
        g.drawImage(aang, 100, 100, this);
    }
}
  

 2) for http://download.oracle.com/javase/tutorial/uiswing/components/icon.html would be better to look for http://download.oracle.com/javase/tutorial/uiswing/components/label.html  

 3) please what's  getImage(getDocumentBase(), getParameter("images.jpg"));  

 there I'll be awaiting something like as 

  URL imageURL = this.getClass().getResource("images.jpg");
Image image = Toolkit.getDefaultToolkit().createImage(imageURL);
Image scaled = image.getScaledInstance(100, 150, Image.SCALE_SMOOTH);
JLabel label = new JLabel(new ImageIcon(scaled));
  



