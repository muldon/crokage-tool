Query: How do I get the state of a thread?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/23007536)
 You should check state of that thread before starting it. 

  if (thread.getState() == Thread.State.NEW)
{
     thread.start();
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/46863595)
 You have to check state of that thread before starting it. 

  if (thread.getState() == Thread.State.NEW)  {
          thread.start();  
}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/5908842)
 Since it's only implementing  Runnable  you'll have to provider a wrapper method to get the state: 

  class Countdown implements Runnable {
    private final Thread thread;

    public Countdown() {
        thread = new Thread(this);
        thread.start();
    }

    public Thread.State getState() {
        return thread.getState();
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/5919871)
 I'd recommend using the run() method and assign the running thread there, no in the c-tor.
. 

  public class Countdown implements Runnable{
volatile Object thread = State.NEW;
public void run(){
  this.thread = Thread.currentThread();
  try{
///....
  finally{
    this.thread = State.TERMINATED;
  



State getState(){
  Object t=this.thread;
  return t instanceof State?((State)t):((Thread)t).getState();

  

  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/34828920)
 Probably your  mThread  is already started and running, thats why do you get that exception.
Try to check the state of  mThread , and start it only when is in  Thread.State.NEW  state. 

  if (mThread.getState() == Thread.State.NEW)
{
     mThread.start();
}
  

 
    Thread.State.NEW : The thread has been created, but has never been started. 
 



