Query: How can I insert an element in array at a given position?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/40388108)
 Given that you want to dynamically add elements, a  List  is probably the right data structure to use, not an array.  

  class example{
    public static void main(String[] args) {
        ArrayList<Integer> array = new ArrayList<>();
        array.add(2);
        array.add(3);
        array.add(4);
        array.add(5);
        array.add(6);
        array.add(7);

        int indexvalue = 2;
        Integer num = 8;

        array.add(indexvalue, num);
    }
}
  

 Here is the javadoc on the  add  method I used here to insert the element: http://docs.oracle.com/javase/6/docs/api/java/util/List.html#add%28int,%20E%29 

 See this post for the many reasons a list is better than an array for what you are trying to do: https://stackoverflow.com/questions/434761/array-versus-listt-when-to-use-which 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/34254082)
 To replace the existing element at specified position in Arraylist use the method, 

  set(int index, E element)
  

 in your code block  you are using  list.add( 2, "New" );  This method inserts the specified element at the specified position in this list. 

 Below are the few difference between add and set method, 

 The  java.util.ArrayList.set(int index, E element)  replaces the element at the specified position in this list with the specified element.here int index is index of the element to replace and element is element to be stored at the specified position.
If the index is out of range then it will throw the  IndexOutOfBoundsException  exception.
This method returns the element previously at the specified position. 

  java.util.ArrayList.add(int index,E element)
  

 method inserts the specified element E at the specified position in this list.It shifts the element currently at that position (if any) and any subsequent elements to the right (will add one to their indices).This method does not return any value.and it will also throw the  IndexOutOfBoundsException  exception if the index is out of range. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/12322744)
 You could use a 2 dimensional array, or a list of arrays and have your function take 2 parameters.  One for the array that you want and the other for the element in the array. 

 2 dimensional array: 

  String[][] ListN = new String[100,100];

String getFromList(int n, int key) {
    return ListN[n][key];
}
  

 Or list of arrays: 

  List<String[]> listOfArrays = new ArrayList<String[]>();
listOfArrays.add(new String[100]);
listOfArrays.add(new String[100]);


String getFromList(int n, int key) {
    return listOfArrays.get(n)[key];
}
  



