Query: How do I breaks a paragraph into sentences?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/9675460)
 I think the problem is there are several different characters between paragraphs (spaces, new lines and carriage returns).  

  int pCount=0;
public void parseData(String data){
    String regex = "([ \\t\\r]*\\n[ \\t\\r]*)+"; // Only this line is changed.
    String split[] = data.split(regex);
    for(int i = 0; i<split.length; i++){ 
        Log.e("e", pCount + " " + split[i]);
        pCount ++;
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/21430792)
  

  String str = "This is how I tried to split a paragraph into a sentence. But, there is a problem. My paragraph includes dates like Jan.13, 2014 , words like U.S and numbers like 2.2. They all got split by the above code.";

Pattern re = Pattern.compile("[^.!?\\s][^.!?]*(?:[.!?](?!['\"]?\\s|$)[^.!?]*)*[.!?]?['\"]?(?=\\s|$)", Pattern.MULTILINE | Pattern.COMMENTS);
Matcher reMatcher = re.matcher(str);
while (reMatcher.find()) {
    System.out.println(reMatcher.group());
}
  

 Output: 

<pre class="lang-none prettyprint-override"> This is how I tried to split a paragraph into a sentence.
But, there is a problem.
My paragraph includes dates like Jan.13, 2014 , words like U.S and numbers like 2.2.
They all got split by the above code.
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/20172593)
 It appears that the existence of a  ParagraphsAnnotation  class in CoreNLP is a red herring - nothing actually uses this class (see http://grepcode.com/search/usages?type=type&id=repo1.maven.org%24maven2@edu.stanford.nlp%24stanford-corenlp@3.2.0@edu%24stanford%24nlp%24ling@CoreAnnotations.ParagraphsAnnotation&k=u - quite literally, there are no references to this class other than its definition).  Therefore, I have to break the paragraphs myself. 

 The key to this is to notice that each sentence contained within the  SentencesAnnotation  contains a  CharacterOffsetBeginAnnotation .  My code then becomes something like this: 

      List<CoreMap> sentences = document.get(SentencesAnnotation.class);
    List<Sentence> convertedSentences = new ArrayList<> ();
    for (CoreMap sentence : sentences)
    {
        int sentenceOffsetStart = sentence.get (CharacterOffsetBeginAnnotation.class);
        if (sentenceOffsetStart > 1 && text.substring (sentenceOffsetStart - 2, sentenceOffsetStart).equals("\n\n") && !convertedSentences.isEmpty ())
        {
            Paragraph current = new Paragraph (convertedSentences);
            paragraphs.add (current);
            convertedSentences = new ArrayList<> ();
        }           
        convertedSentences.add (new Sentence (sentence));
    }
    Paragraph current = new Paragraph (convertedSentences);
    paragraphs.add (current);
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/3132330)
  br2nl  and  p2nl  are not too complicated.  

  String plain = htmlText.replaceAll(" ","\\n").replaceAll(" ","\\n\\n").replaceAll(" ","");
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/35894342)
 If you are reading from file, you can use  

  Scanner scan = new Scanner(file);
scan.useDelimiter("\\Z");
String content = scan.next();
  

 If you are taking input from a  console  you can use any other  delimiter  to end the reading. 



