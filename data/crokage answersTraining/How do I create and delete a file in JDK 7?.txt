Query: How do I create and delete a file in JDK 7?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/20281958)
 Java isn't able to delete folders with data in it. You have to delete all files before deleting the folder. 

 Use something like: 

  String[]entries = index.list();
for(String s: entries){
    File currentFile = new File(index.getPath(),s);
    currentFile.delete();
}
  

 Then you should be able to delete the folder by using  index.delete() 
Untested! 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/876845)
 A file created by: 

  File temp = File.createTempFile("temp",".txt");
  

 Will not be deleted, see http://java.sun.com/j2se/1.4.2/docs/api/java/io/File.html, you have to call 

  temp.deleteOnExit();
  

 so the JVM will delete the file on exit... 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/20282002)
 directry cannot simply delete if it has the files so you may need to delete the files inside first and then directory 

  public class DeleteFileFolder {

public DeleteFileFolder(String path) {

    File file = new File(path);
    if(file.exists())
    {
        do{
            delete(file);
        }while(file.exists());
    }else
    {
        System.out.println("File or Folder not found : "+path);
    }

}
private void delete(File file)
{
    if(file.isDirectory())
    {
        String fileList[] = file.list();
        if(fileList.length == 0)
        {
            System.out.println("Deleting Directory : "+file.getPath());
            file.delete();
        }else
        {
            int size = fileList.length;
            for(int i = 0 ; i < size ; i++)
            {
                String fileName = fileList[i];
                System.out.println("File path : "+file.getPath()+" and name :"+fileName);
                String fullPath = file.getPath()+"/"+fileName;
                File fileOrFolder = new File(fullPath);
                System.out.println("Full Path :"+fileOrFolder.getPath());
                delete(fileOrFolder);
            }
        }
    }else
    {
        System.out.println("Deleting file : "+file.getPath());
        file.delete();
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/36841255)
 if  storageDir  is a directory 

  for(File tempFile : storageDir.listFiles()) {
    tempFile.delete();
}
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/29230012)
 My basic recursive version, working with older versions of JDK: 

  public static void deleteFile(File element) {
    if (element.isDirectory()) {
        for (File sub : element.listFiles()) {
            deleteFile(sub);
        }
    }
    element.delete();
}
  



