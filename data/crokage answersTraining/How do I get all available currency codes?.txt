Query: How do I get all available currency codes?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/2544488)
 According to the https://docs.oracle.com/javase/1.5.0/docs/guide/intl/locale.doc.html, you have locale codes  hi_IN  (Hindi) and  en_IN  (English). 

  System.out.println(Currency.getInstance(new Locale("hi", "IN")).getSymbol());
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/18531225)
 heres is simple thing u can do ,  

    float amount = 100000;

  NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("en", "IN"));

  String moneyString = formatter.format(amount);

  System.out.println(moneyString);
  

 The output will be , Rs.100,000.00 .  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/10691800)
 This code do the tricks :  

      double value = 12345.678;
    java.util.Currency usd = java.util.Currency.getInstance("USD");
    java.text.NumberFormat format = java.text.NumberFormat.getCurrencyInstance(java.util.Locale.US);
    format.setCurrency(usd);
    System.out.println(format.format(value) + " " + usd.getCurrencyCode());
  

 Output :  

  $12,345.68 USD
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/14685495)
 This seems to be a known issue (http://code.google.com/p/android/issues/detail?id=38622.
I came to a possible solution this way: 

 Since the problem is in the Symbol and not the Currency code, i solved this problem creating a static Map  where the key is the  CurrencyCode  and the value is the  Symbol .  

  public static final Map<String, String> MYCURRENCIES = new HashMap<String, String>(){
        {
            put("EUR","€");
            put("USD","$");
            (..)
        }
};
  

 In order to get all (or almost) the currencies codes available in the locales information you can do something like this: 

  for (Locale ll: Locale.getAvailableLocales()){
    try {
       Currency a = Currency.getInstance(ll);
       Log.v("MyCurrency",a.getCurrencyCode()+"#"+a.getSymbol());
    }catch (Exception e){
       // when the locale is not supported
  }
}
  

 After you created you Map with the  CurrencyCode  and  Symbol  you just have to something like this: 

  Currency currency = Currency.getInstance(Locale.getDefault());
String curSymbol = MYCURRENCIES.get(currency.getCurrencyCode());
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/7828512)
 Try using http://download.oracle.com/javase/1.4.2/docs/api/java/text/NumberFormat.html#setCurrency%28java.util.Currency%29 on the instance returned by getCurrencyInstance(Locale.GERMANY) 

  Broken : 

  java.text.NumberFormat format = java.text.NumberFormat.getCurrencyInstance(java.util.Locale.GERMANY);
System.out.println(format.format(23));
  

 Output: 23,00 € 

  Fixed : 

  java.util.Currency usd = java.util.Currency.getInstance("USD");
java.text.NumberFormat format = java.text.NumberFormat.getCurrencyInstance(java.util.Locale.GERMANY);
format.setCurrency(usd);
System.out.println(format.format(23));
  

 Output: 23,00 USD 



