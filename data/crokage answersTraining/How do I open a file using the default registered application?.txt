Query: How do I open a file using the default registered application?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/11106510)
 you can use the following to open files with the default application: 

      /* build up command and launch */
    String command = "";
    String file = "FILE IN HERE";
    if (isLinux()) {
        command = "xdg-open " + file;
    } else if (isWindows()) {
        command = "cmd /C start " + file;
    } else
        return;

    try {
        Runtime.getRuntime().exec(command);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
  

 available since 1.0: http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html. 


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/16949751)
  

  Desktop.getDesktop().open(new File("filePath"));
  

 i.e. 

  Desktop.getDesktop().open(new File("C:/doc1.doc"));
  

 It should open the file with the default application 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/39902742)
 If you want to either open a URL which has an  http:  scheme in the browser, or open a file using the default application for that file type, the  HostServices.showDocument(...)  method you referenced provides a "pure JavaFX" way to do this. Note that you can't use this (as far as I can tell) to download a file from a web server and open it with the default application. 

 To open a file with the default application, you must convert the file to the string representation of the  file:  URL. Here is a simple example: 

  import java.io.File;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

public class OpenResourceNatively extends Application {

    @Override
    public void start(Stage primaryStage) {
        TextField textField = new TextField("http://stackoverflow.com/questions/39898704");
        Button openURLButton = new Button("Open URL");
        EventHandler<ActionEvent> handler = e -> open(textField.getText());
        textField.setOnAction(handler);
        openURLButton.setOnAction(handler);

        FileChooser fileChooser = new FileChooser();
        Button openFileButton = new Button("Open File...");
        openFileButton.setOnAction(e -> {
            File file = fileChooser.showOpenDialog(primaryStage);
            if (file != null) {
                open(file.toURI().toString());
            }
        });

        VBox root = new VBox(5, 
                new HBox(new Label("URL:"), textField, openURLButton),
                new HBox(openFileButton)
        );

        root.setPadding(new Insets(20));
        primaryStage.setScene(new Scene(root));
        primaryStage.show();
    }

    private void open(String resource) {
        getHostServices().showDocument(resource);
    }

    public static void main(String[] args) {
        launch(args);
    }
}
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/9935218)
 Try Desktop.open: 

  Desktop.getDesktop().open(file);
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/27477125)
  If there is a registered program for your file in windows, this should work. (i.e. the default application should open the file) 

  Desktop desktop = Desktop.getDesktop();
desktop.open(file);
  

 The file parameter is a  File  object. 

 https://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html 

 https://docs.oracle.com/javase/tutorial/uiswing/misc/desktop.html  



