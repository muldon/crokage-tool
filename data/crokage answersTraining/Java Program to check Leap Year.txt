Query: Java Program to check Leap Year
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/28557011)
  new GregorianCalendar().isLeapYear(year);
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/25617941)
 Apart from the algorithm you can calculate leap year using java's built in Calendar api.  

  static boolean isLeapYear(int year){
    Calendar calendar= Calendar.getInstance();
    calendar.set(Calendar.YEAR,year);
    return calendar.getActualMaximum(Calendar.DAY_OF_YEAR) > 365;
}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/37380349)
  java.time.Year::isLeap  

 I'd like to add the new https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html way of doing this with the https://docs.oracle.com/javase/8/docs/api/java/time/Year.html class and https://docs.oracle.com/javase/8/docs/api/java/time/Year.html#isLeap-- method: 

  java.time.Year.of(year).isLeap()
  


-------------------------------------next answer-------------------------------------

Rank:4 (https://stackoverflow.com/questions/7395736)
 Quoting http://en.wikipedia.org/wiki/Leap_year 

 
   Years that are evenly divisible by 100 are not leap years, unless they
  are also evenly divisible by 400, in which case they are leap years. 
 

 So if you want to reinvent the wheel: 

  boolean isLeapYear = year%4 == 0 && (year%100 != 0 || year%400 == 0)
  

 But the most elegant solution (taken from https://stackoverflow.com/questions/1021324/java-code-for-calculating-leap-year-is-this-code-correct/1021373#1021373) is probably 

  public static boolean isLeapYear(int year) {
  Calendar cal = Calendar.getInstance();
  cal.set(Calendar.YEAR, year);
  return cal.getActualMaximum(DAY_OF_YEAR) > 365;
}
  


-------------------------------------next answer-------------------------------------

Rank:5 (https://stackoverflow.com/questions/18607741)
 Try   GregorianCalendar  http://docs.oracle.com/javase/6/docs/api/java/util/GregorianCalendar.html 

  GregorianCalendar gc = new GregorianCalendar();
if (gc.isLeapYear(year) ) 
  



