Query: How do I move a file in JDK 7?
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/21076728)
 I suggest to try Java 7 NIO2 

  Files.move(Path source, Path target, CopyOption... options)
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/37477895)
 From my understanding of your question,  you are trying to pass  String  variables instead of  java.nio.Path  variables to the  Files.move() .   The below way works: 

  import java.io.File
import java.nio.file.{Files, Path, StandardCopyOption}

val d1 = new File("/abcd").toPath
val d2 = new File("/efgh").toPath

Files.move(d1, d2, StandardCopyOption.ATOMIC_MOVE)
  

 However I see one more issue in your code.
Both  StandardCopyOption.REPLACE_EXISTING  and  StandardCopyOption.ATOMIC_MOVE  should work but, you can't move a parent directory directly into it's child directory. 

  $ mv public/ public/images
mv: cannot move ‘public/’ to a subdirectory of itself, ‘public/images’
  

 Instead you might want to move  public  ->  tmp  ->  public/images  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/45033203)
 You need to keep the first target file of renameTo as reference and rename that one. 

  File processing = new File(processingFolderName 
                        + File.separator 
                        + finalFileToProcess.getName());
boolean fileMoveCompleted = finalFileToProcess.renameTo(processing);
File finished = new File(successFolderName 
                        + File.separator 
                        + finalFileToProcess.getName());
fileMoveCompleted = processing.renameTo(finished);
  

 But as https://docs.oracle.com/javase/7/docs/api/java/io/File.html#renameTo(java.io.File) suggests, you should better use https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#move(java.nio.file.Path,%20java.nio.file.Path,%20java.nio.file.CopyOption...). 



