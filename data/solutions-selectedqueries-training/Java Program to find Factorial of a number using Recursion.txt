Query: Java Program to find Factorial of a number using Recursion
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/11447287)
  public static void main(String[] args) {
    BigInteger fact = BigInteger.valueOf(1);
    for (int i = 1; i <= 8785856; i++)
        fact = fact.multiply(BigInteger.valueOf(i));
    System.out.println(fact);
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/13021152)
 In your code,  num  starts as the 0<sup>th</sup> Fibonacci number, and  num1  as the 1<sup>st</sup>. So to find the n<sup>th</sup>, you have to iterate the step  n  times: 

  for (loop = 0; loop < n; loop ++)
{
    fibonacci = num + num2;
    num = num2;
    num2 = fibonacci;
}
System.out.print(num);
  

 and only print it when you've finished. 

 When the loop counter  loop  has the value  k ,  num  holds the k<sup>th</sup> Fibonacci number and  num2  the (k+1)<sup>th</sup>. 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/35072776)
 Simple one liner solution, though internally it is doing a loop, as it can't possible without it, but you don't need to do it yourselves: 

  Long factorialNumber = LongStream.rangeClosed(2, N).reduce(1, Math::multiplyExact);
  



