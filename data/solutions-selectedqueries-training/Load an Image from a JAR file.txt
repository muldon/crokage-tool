Query: Load an Image from a JAR file
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/982803)
 Load your Image into a Buffered Image and then get the data from it 

  BufferedImage img = null;
try {
   img = ImageIO.read(new File ("c:/imageFile.gif"));
} catch(Exception e) {}

Raster R=img.getData();
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/23541194)
 The images should not be loaded from the file system, but should be bundled into the app, inside your jar. 

 If you put the image  foo.png  inside the jar, under the package  com.bar.resources  for example, you simply need to use 

  InputStream in = getClass().getResourceAsStream("/com/bar/resources/foo.png")
  

 to load the image as an input stream. 

 That will use the class loader to load the image. So, during development, if you're using a standard IDE project, you just need to put the image file in the appropriate package in your source directory: the IDE will "compile" the file by copying it to the same directory as the generated .. 
If you're using a standard Maven/Gradle project, then it needs to be put in the appropriate package under  src/main/resources . 


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/4597392)
 This should work. 

  String imgName = "/resources/images/image.jpg";
InputStream in = getClass().getResourceAsStream(imgName);
ImageIcon img = new ImageIcon(ImageIO.read(in));
  



