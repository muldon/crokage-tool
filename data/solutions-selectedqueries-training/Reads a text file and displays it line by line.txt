Query: Reads a text file and displays it line by line
-----------------------------------------------------------------------

Rank:1 (https://stackoverflow.com/questions/36657062)
  setText  does that, sets the text of the field 

 Now,  JTextArea  has a simple  read  method for reading content, for example 

  try (BufferedReader reader = new BufferedReader(new FileReader(new File("resources/New Text Document.txt")))) {
    textArea.read(reader, "File");
} catch (IOException exp) {
    exp.printStackTrace();
}
  


-------------------------------------next answer-------------------------------------

Rank:2 (https://stackoverflow.com/questions/9857707)
 Append the newline when reading lines.  

 For example 

  String output = "";
try {
    BufferedReader br = new BufferedReader(new FileReader(args[i]));
    while ((thisLine = br.readLine()) != null) {
        thisLine += "\n";
        output += thisLine;
    } 
} // end try
catch (IOException e) {
    System.err.println("Error: " + e);
}
  


-------------------------------------next answer-------------------------------------

Rank:3 (https://stackoverflow.com/questions/9857723)
 All JTextComponents have the ability to read in text files and write to text files while fully respecting the newline character for the current operating system, and it is often advantageous to use this.  In your case, you would use the JTextArea's  read(...)  method to read in the file while fully understanding the file system's native new-line character.  

  BufferedReader br = new BufferedReader(new FileReader(file));
textArea.read(br, null);
  

 Or for a more complete example: 

  import java.io.*;
import javax.swing.*;

public class TextIntoTextArea {
   public static void main(String[] args) {
      SwingUtilities.invokeLater(new Runnable() {
         public void run() {
            createAndShowGui();
         }
      });
   }

   private static void createAndShowGui() {
      JFileChooser fileChooser = new JFileChooser();
      int response = fileChooser.showOpenDialog(null);
      if (response == JFileChooser.APPROVE_OPTION) {
         File file = fileChooser.getSelectedFile();
         BufferedReader br = null;
         try {
            br = new BufferedReader(new FileReader(file));
            final JTextArea textArea = new JTextArea(20, 40);

            textArea.read(br, null); // here we read in the text file

            JOptionPane.showMessageDialog(null, new JScrollPane(textArea));
         } catch (FileNotFoundException e) {
            e.printStackTrace();
         } catch (IOException e) {
            e.printStackTrace();
         } finally {
            if (br != null) {
               try {
                  br.close();
               } catch (IOException e) {
               }
            }
         }
      }
   }
}
  



