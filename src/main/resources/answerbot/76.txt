----------------- No.76 -----------------
query : accessing an sdf sqlserver mobile file from java

----Summary----
I Do Not Quite Have An Answer For You. But Ihave Recreated Your Situation As You Described. It Is The Same With The Jdbc Driver V3.101 And V3.202 And V4.Ctp3 When Run Under Jdk1.7. However The V2 Driver From Ms Gives Your Expected Answer Both Under Jdk1.6 And Jdk1.7. If You Need A Quick Fix And Can Move To An Older Jdbc Driver That May Work For You.
Edit.
Java.Util.Date Is Not Timezone Agnostic. The Method Todatetime Takes Care Of Timezone And Dst So You Do Not Care About It.
I Noticed Mysql Java Driver Failed To Communicate The Client Timezone To The Server. This Command S.Executeupdate Set Time_zone Xx Yy Is The Workaround But You Are Using It Wrong. You Have To Tell The Server With It The Tz The Client Is Using Before Both Inserting And Querying. The Variable Is Stored In The Session. Maybe You May Automatize It On Your Connection Pool Config. This Is Needed So The Server Know What Tz The Client Need To Use To Read Or Write. This Is Not Dependent On Server Tz . It Does Not Mean Store This Date In Utc It Does Mean This Date I Am Giving To You Is Utc And Send Me Result Sets In Utc . No Matter You Are Using Date Class With It Is Internal Tz The Driver Screws It Up You Would Need To Set That Session Variable.
This May Be A Jdbcspecific Issue Because Jdbc Requires That Time Times Be Converted To The Local Zone. Where The Mysql C Api Does Not Probably Because C Is Classic Time Types Are Not Zoneaware The Way Java Is Are. And It Needs To Know What Zone It Is Converting From As Well. The Mysql Timestamp Type Is Always Stored As Utc. But That Is Not Stated For The Datetime Type. I Think That Implies That Mysql Is Going To Interpret Datetime Column Values As Being In The Server Is Time Zone. Which You Mentioned As Being Set To Bst And That Is Consistent With The Direction Of The Shift Shown In Your Assertion Error Message.
----------------------------------------