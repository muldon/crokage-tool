----------------- No.89 -----------------
query : java lambda expression requires unavoidable null

----Summary----
You Should Never Really Ignore Warnings. They Re There For A Reason. Try To Fix Whatever Is Causing Them In General. Sometimes They Re Runtimesafe But Can Improve Code Readability Sometimes They Re Really Because Of Something That Can Make You Code Blow Up.
When Enabled The Compiler Will Issue An Error Or A Warning Even When It Detects A Generic Type Problem That Could Not Have Been Avoided By The Programmer. As An Example A Type May Be Forced To Use Raw Types In Its Method Signatures And Return Types Because The Methods It Overrides From A Super Type Are Declared To Use Raw Types In The First Place.
You Can Not Make Lastname A String Because A Local Variable That Is Used In A Lambda Or Anonymous Inner Class Must Be Effectively Final See Here I.E. You Can Not Overwrite It In Each Execution Of The Lambda In The .Foreach Loop. When Using An Array Or Some Other Wrapper Object You Do Not Assign A New Value To That Variable But Only Change Some Aspect Of It Thus It Can Be Final.
Those Are Two Different Constructs That Are Doing Two Different Things. In The First Case You Are Getting The Method Reference Of A Specific Object This Needs To Be Done Only Once After Which The Jvm Has Its Own Reference So Effectively Final To The Object F And Can Call The Handle Method. In The Second Case At Each Call The Jvm Has To Resolve The F Reference And It Thus Complains That F Must Be Final . You Could Easily Write Code That Sets F To Null While The Foreach Is Running And Thus Cause A Npe.
To Add An Illustration To Giovanni Is Answer We Can Highlight The Difference Between F Handle And Obj F.Handle Obj If We Replace F With A Method Call.
----------------------------------------