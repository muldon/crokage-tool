debug=false
server.port= 8080
#server.port= 80

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.database.driverClassName=org.postgresql.Driver
spring.devtools.livereload.enabled = false

endpoints.cors.allowed-origins=*
spring.jpa.show-sql=false
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.file = coderec.log
#logging.config = classpath:logback.xml


############################## INPUT PARAMETERS ######################################

spring.datasource.url=jdbc:postgresql://localhost:5432/stackoverflow2018java
spring.datasource.username=postgres
spring.datasource.password=lascampostgres5k

# This file must exists anywhere the app runs
pathFileEnvFlag = /home/digao/tmp/environmentFlag.properties
#tagFilter = java    --run script to fill postsmin table containing only java posts 


#1 to 4. 
# 1- Run approach for two perspectives: with and without RACK, run steps 1 to 6 for each question, for each perspective, storing the ids obtained in the end of step 6.
# 2- Run internal survey to evaluate answers. For each question, retrieve the related posts previously stored, run steps 7 to 9 using default weights for the composer. Store the evaluation of each user, for each perspective.
# 3- Discover the best weights for the composer. For each answerbot question, retrieve the previously stored related questions, run boostrap varying weights, run composer, build ranked list and generate recall-rates and mrr. In the end, store the k best results and their weights.
# 4- Run external survey to evaluate answers. For each question, retrieve the related posts previously stored, run steps 7 to 9 using the best weights for the composer, and the best evaluated perspective. Store the evaluation of each user.
# If null, the app is ready and the weights have been found. 
phaseNumber=2

#external question field 
obs = questions without rack
pickUpOnlyTheFirstQuery = false
shuffleListOfQueriesBeforeGoogleSearch = false

#if false, disable RACK tool
runRack = false
numberOfRackClasses = 2

#if false, use a static list
runGoogleSearch = true   
numberOfGoogleResults = 10
APIKEY				= AIzaSyDtJV3KNblIpJfWGyKqSLMXntcZZlEZGFw
CUSTOM_SEARCH_ID    = 001510221793838672117:ix_l9bnjhbq



#when performing stemming and removing stop words, prune words with minimum size equals or less than:
minTokenSize=2

#other important control variables

internalSurveyRankListSize=20
externalSurveyRankListSize=10

#ranking weights
alphaCosSim  	  = 0.50
betaCoverageScore = 0.50
gamaCodeSizeScore = 0.50
deltaRepScore     = 0.50
epsilonUpScore    = 0.50

